1)TWO sum problem wrsp to sorted array
------------------------------------
l=list(map(int,input("enter a list").split()))
t=int(input("enter a target"))
low=0
high=len(l)-1
flag=1
while(low<high):
	sum=l[low]+l[high]
	if(sum==t):
		print("yes")
		flag=0
		break
	elif(sum>t):
		high-=1
	elif(sum<t):
		low+=1
if(flag==1):
	print("no")

2)Two sums problem wrsp to high complexity
----------------------------------------
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        for i in range(0,len(nums)):
            for j in range(i+1,len(nums)):
                if(nums[i]+nums[j]==target):
                    return [i,j]
					
3)Two sums problem wrsp to low complexity
------------------------------------------
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        d={}
        for a in range(0,len(nums)):
            b=target-nums[a]
            if(b in d):
                return[d[b],a]
            else:
                d[nums[a]]=a
				
4)convert list into Dictonary
-----------------------------
l=list(map(int,input("enter a list:").split()))
d={}
for i in l:
	if(i in d):
		d[i]+=1
	else:
		d[i]=1
print(d)

5)iteration of dict
-------------------
for key,value in d.items():
	if(value>len(nums)//2):
        return key
		
6)return second largest element without using inbulit functions
--------------------------------------------------------------
l=list(map(int,input("enter a list:").split()))
Max=l[0]
for i in range(0,len(l)):
    if(l[i]>Max):
        Max=l[i]
sMax=float("-inf")
for i in range(0,len(l)):
    if(l[i]>sMax and l[i]!=Max):
        sMax=l[i]
print(sMax)

7)count the vowels and consonets
-------------------------------
s="Anitha"
vowels='AEIOUaeiou"
v=0
c=0
for i in s:
	if(i in vowels):
		v+=1
	else:
		c+=1
print(v,c)
//print the vowles and consonents
a="AEIOUaeiou"
s="Anitha"
v=[]
c=[]
count=0
vcount=0
for i in s:
    if i in a:
        vcount+=1
        v.append(i)
    else:
        count+=1
        c.append(i)
print(count)
print(vcount)
print(v)
print(c)

8)display a passwars strength
-----------------------------
s=input()
capital=0
small=0
number=0
specical=0
for i in s:
    if(ord(i)>=65 and ord(i)<=90):
        capital+=1
    elif(ord(i)>=97 and ord(i)<=122):
        small+=1
    elif(ord(i)>=48 and ord(i)<=57):
        number+=1
    else:
        specical+=1
if(len(s)>=8 and capital>0 and small>0 and number>0 and specical>0):
    print("stong password")
elif(len(s)==0):
    print("please enter a password")
else:
    print("weak password")
	
9)taling zeros using brute force	////////////in this problem take more time
---------------------------------
from math import *
t=int(input())
for i in range(t):
	n=int(input())
	x=factorial(n)
	count=0
	while(x>0):
		rem=x%10
		if(rem==0):
			count+=1
		else:
			break
		x=x//10
	print(count)
10)talling	zeros uisng optimal code
----------------------------------
t=int(input())
for i in range(t):
	n=int(input())
	count=0
	while(n>0):
		count+=n//5
		n=n//5
	print(count)
	
11)print the zeros at the end of the list
------------------------------------------
l=list(map(int,input("enter a list:").split()))
k=[0]*len(l)
j=0
for i in range(len(l)):
    if(l[i]!=0):
        k[j]=l[i]
        j+=1
print(k)	

12)maximum subarray by suing kadenes algorithm
--------------------------------------------
l=list(map(int,input("enter a list:").split()))
ms=float("-inf")
cs=0
for i in range(0,len(l)):
	cs+=l[i]
	ms=max(cs,ms)
	if(cs<0):
		cs=0
return ms

13)array leaders by using brute force
-----------------------------------
class Solution:
    def leaders(self,n, arr):
        l=[]
        for i in range(0,len(arr)-1):
            x=1
            for j in range(i+1,len(arr)):
                if(arr[i]>=arr[j]):
                    continue
                else:
                    x=0
                    break
            if(x==1):
                l.append(arr[i])
        l.append(arr[n-1])
        return l

14)spiral matrix
----------------
mat=[]
n=int(input())
for i in range(n):
    l=list(map(int,input().split()))
    mat.append(l)
sr=0
sc=0
er=len(mat)-1
ec=len(mat[0])-1
while(sr<=er and sc<=ec):
    for i in range(sc,ec+1):
        print(mat[sr][i])
    sr+=1
    for i in range(sr,er+1):
        print(mat[i][ec])
    ec-=1
    for i in range(ec,sc-1,-1):
        print(mat[er][i])
    er-=1
    for i in range(er,sr-1,-1):
        print(mat[i][sc])
    sc+=1


		

